{"ast":null,"code":"var _jsxFileName = \"/Users/krystalpothilat/code/krystalpothilat.github.io/personal-website/src/List.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport downarrow from \"./imgs/downarrow.png\";\nimport './List.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction List({\n  data\n}) {\n  _s();\n  const [showInfo, setShowInfo] = useState({});\n  const toggleInfo = itemId => {\n    setShowInfo(prevShowInfo => ({\n      ...prevShowInfo,\n      [itemId]: !prevShowInfo[itemId]\n    }));\n  };\n  // Check if data is an array\n  if (!Array.isArray(data)) {\n    console.error('Data is not an array:', data);\n    return null; // or handle the error in a different way\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"List\",\n    children: data.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: downarrow // Provide the path to your image\n          ,\n          alt: showInfo[item.id] ? 'Hide Info' : 'Show Info',\n          className: \"info-image\",\n          onClick: () => toggleInfo(item.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), showInfo[item.id] && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"additional-info\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)]\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(List, \"P/t4U03+c4+dlex1dJbvKwBsmNM=\");\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","useState","downarrow","jsxDEV","_jsxDEV","List","data","_s","showInfo","setShowInfo","toggleInfo","itemId","prevShowInfo","Array","isArray","console","error","className","children","map","item","title","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","id","onClick","description","_c","$RefreshReg$"],"sources":["/Users/krystalpothilat/code/krystalpothilat.github.io/personal-website/src/List.js"],"sourcesContent":["import React, { useState } from 'react';\nimport downarrow from \"./imgs/downarrow.png\";\nimport './List.css';\n\nfunction List({ data }) {\n  const [showInfo, setShowInfo] = useState({});\n\n  const toggleInfo = (itemId) => {\n    setShowInfo((prevShowInfo) => ({\n      ...prevShowInfo,\n      [itemId]: !prevShowInfo[itemId],\n    }));\n  };\n    // Check if data is an array\n    if (!Array.isArray(data)) {\n        console.error('Data is not an array:', data);\n        return null; // or handle the error in a different way\n    }\n\n\n  return (\n    <div className=\"List\">\n      {data.map((item) => (\n        <div key={item.id} className=\"list-item\">\n          <div className=\"item-header\">\n            <span>{item.title}</span>\n            <img\n              src={downarrow} // Provide the path to your image\n              alt={showInfo[item.id] ? 'Hide Info' : 'Show Info'}\n              className=\"info-image\"\n              onClick={() => toggleInfo(item.id)}\n            />\n          </div>\n          {showInfo[item.id] && (\n            <div className=\"additional-info\">\n                <p>{item.description}</p>\n            </div>\n          )}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default List;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,sBAAsB;AAC5C,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,SAASC,IAAIA,CAAC;EAAEC;AAAK,CAAC,EAAE;EAAAC,EAAA;EACtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE5C,MAAMS,UAAU,GAAIC,MAAM,IAAK;IAC7BF,WAAW,CAAEG,YAAY,KAAM;MAC7B,GAAGA,YAAY;MACf,CAACD,MAAM,GAAG,CAACC,YAAY,CAACD,MAAM;IAChC,CAAC,CAAC,CAAC;EACL,CAAC;EACC;EACA,IAAI,CAACE,KAAK,CAACC,OAAO,CAACR,IAAI,CAAC,EAAE;IACtBS,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEV,IAAI,CAAC;IAC5C,OAAO,IAAI,CAAC,CAAC;EACjB;EAGF,oBACEF,OAAA;IAAKa,SAAS,EAAC,MAAM;IAAAC,QAAA,EAClBZ,IAAI,CAACa,GAAG,CAAEC,IAAI,iBACbhB,OAAA;MAAmBa,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACtCd,OAAA;QAAKa,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1Bd,OAAA;UAAAc,QAAA,EAAOE,IAAI,CAACC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACzBrB,OAAA;UACEsB,GAAG,EAAExB,SAAU,CAAC;UAAA;UAChByB,GAAG,EAAEnB,QAAQ,CAACY,IAAI,CAACQ,EAAE,CAAC,GAAG,WAAW,GAAG,WAAY;UACnDX,SAAS,EAAC,YAAY;UACtBY,OAAO,EAAEA,CAAA,KAAMnB,UAAU,CAACU,IAAI,CAACQ,EAAE;QAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,EACLjB,QAAQ,CAACY,IAAI,CAACQ,EAAE,CAAC,iBAChBxB,OAAA;QAAKa,SAAS,EAAC,iBAAiB;QAAAC,QAAA,eAC5Bd,OAAA;UAAAc,QAAA,EAAIE,IAAI,CAACU;QAAW;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CACN;IAAA,GAdOL,IAAI,CAACQ,EAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAeZ,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAClB,EAAA,CAtCQF,IAAI;AAAA0B,EAAA,GAAJ1B,IAAI;AAwCb,eAAeA,IAAI;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}