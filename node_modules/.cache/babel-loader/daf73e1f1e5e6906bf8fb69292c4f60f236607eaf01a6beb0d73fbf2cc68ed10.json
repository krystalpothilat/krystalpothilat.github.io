{"ast":null,"code":"var _jsxFileName = \"/Users/krystalpothilat/code/krystalpothilat.github.io/personal-website/src/List.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n// import './List.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction List({\n  data\n}) {\n  _s();\n  const [showInfo, setShowInfo] = useState({});\n  const toggleInfo = itemId => {\n    setShowInfo(prevShowInfo => ({\n      ...prevShowInfo,\n      [itemId]: !prevShowInfo[itemId]\n    }));\n  };\n  // Check if data is an array\n  if (!Array.isArray(data)) {\n    console.error('Data is not an array:', data);\n    return null; // or handle the error in a different way\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"List\",\n    children: data.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => toggleInfo(item.id),\n          children: showInfo[item.id] ? 'Hide Info' : 'Show Info'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), showInfo[item.id] && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"item-info\",\n        children: item.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 33\n      }, this)]\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(List, \"P/t4U03+c4+dlex1dJbvKwBsmNM=\");\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","List","data","_s","showInfo","setShowInfo","toggleInfo","itemId","prevShowInfo","Array","isArray","console","error","className","children","map","item","title","fileName","_jsxFileName","lineNumber","columnNumber","onClick","id","description","_c","$RefreshReg$"],"sources":["/Users/krystalpothilat/code/krystalpothilat.github.io/personal-website/src/List.js"],"sourcesContent":["import React, { useState } from 'react';\n// import './List.css';\n\nfunction List({ data }) {\n  const [showInfo, setShowInfo] = useState({});\n\n  const toggleInfo = (itemId) => {\n    setShowInfo((prevShowInfo) => ({\n      ...prevShowInfo,\n      [itemId]: !prevShowInfo[itemId],\n    }));\n  };\n    // Check if data is an array\n    if (!Array.isArray(data)) {\n        console.error('Data is not an array:', data);\n        return null; // or handle the error in a different way\n    }\n\n\n  return (\n    <div className=\"List\">\n      {data.map((item) => (\n        <div key={item.id} className=\"list-item\">\n          <div className=\"item-header\">\n            <span>{item.title}</span>\n            <button onClick={() => toggleInfo(item.id)}>\n              {showInfo[item.id] ? 'Hide Info' : 'Show Info'}\n            </button>\n          </div>\n          {showInfo[item.id] && <p className=\"item-info\">{item.description}</p>}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default List;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,IAAIA,CAAC;EAAEC;AAAK,CAAC,EAAE;EAAAC,EAAA;EACtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE5C,MAAMQ,UAAU,GAAIC,MAAM,IAAK;IAC7BF,WAAW,CAAEG,YAAY,KAAM;MAC7B,GAAGA,YAAY;MACf,CAACD,MAAM,GAAG,CAACC,YAAY,CAACD,MAAM;IAChC,CAAC,CAAC,CAAC;EACL,CAAC;EACC;EACA,IAAI,CAACE,KAAK,CAACC,OAAO,CAACR,IAAI,CAAC,EAAE;IACtBS,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEV,IAAI,CAAC;IAC5C,OAAO,IAAI,CAAC,CAAC;EACjB;EAGF,oBACEF,OAAA;IAAKa,SAAS,EAAC,MAAM;IAAAC,QAAA,EAClBZ,IAAI,CAACa,GAAG,CAAEC,IAAI,iBACbhB,OAAA;MAAmBa,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACtCd,OAAA;QAAKa,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1Bd,OAAA;UAAAc,QAAA,EAAOE,IAAI,CAACC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACzBrB,OAAA;UAAQsB,OAAO,EAAEA,CAAA,KAAMhB,UAAU,CAACU,IAAI,CAACO,EAAE,CAAE;UAAAT,QAAA,EACxCV,QAAQ,CAACY,IAAI,CAACO,EAAE,CAAC,GAAG,WAAW,GAAG;QAAW;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,EACLjB,QAAQ,CAACY,IAAI,CAACO,EAAE,CAAC,iBAAIvB,OAAA;QAAGa,SAAS,EAAC,WAAW;QAAAC,QAAA,EAAEE,IAAI,CAACQ;MAAW;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GAP7DL,IAAI,CAACO,EAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQZ,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAClB,EAAA,CA/BQF,IAAI;AAAAwB,EAAA,GAAJxB,IAAI;AAiCb,eAAeA,IAAI;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}